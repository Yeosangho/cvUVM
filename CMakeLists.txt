CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(multipleCUDAStreamCV)
get_filename_component(PARENT_DIR ${CMAKE_SOURCE_DIR} PATH)
set(CUDA_USE_STATIC_CUDA_RUNTIME OFF)
MESSAGE("${PROJECT_SOURCE_DIR}/FindTBB")
list(APPEND CMAKE_MODULE_PATH "/home/ubuntu/dev_opencv3/tbbTest/FindTBB/")
find_package(OpenCV REQUIRED)
find_package(CUDA REQUIRED)
find_package(TBB REQUIRED)
INCLUDE(FindCUDA)

LIST(APPEND CMAKE_CXX_FLAGS "-std=c++11 -g -O3 -Wno-unused-result -Wno-deprecated -fPIC -Wno-deprecated-gpu-targets")
LIST(APPEND CUDA_NVCC_FLAGS --default-stream per-thread --compiler-options -fno-strict-aliasing -lineinfo -use_fast_math -Xptxas -dlcm=cg)
LIST(APPEND CUDA_NVCC_FLAGS  -O3 -gencode arch=compute_53,code=sm_53)
include_directories("${OpenCV_INCLUDE_DIRS}")
include_directories(/usr/local/cuda/include)
FILE(GLOB SOURCES "*.cu" "*.cpp" "*.c" "*.h")
cuda_add_executable(multipleCUDAStreamCV main.cpp memoryAccessor.h memoryAccessor.cu)
target_include_directories(multipleCUDAStreamCV PRIVATE ${TBB_INCLUDE_DIRS})
target_compile_definitions(multipleCUDAStreamCV PRIVATE ${TBB_DEFINITIONS})
target_link_libraries(multipleCUDAStreamCV ${OpenCV_LIBS} ${TBB_LIBRARIES} pthread)
